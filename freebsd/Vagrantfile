Vagrant.configure("2") do |config|
  config.vm.guest = :freebsd
  config.vm.synced_folder ".", "/vagrant", id: "vagrant-root", disabled: true
  #
  # If you have not yet setup a custom freebsd11 box based on
  # freebsd/FreeBSD-11.0-STABLE, create one by "vagrant package" command 
  # with modified /etc/rc.conf not to perform DHCP for all the 
  # interfaces and basic packages.
  # In the process of doing so, comment out private network configuration below.
  #
  config.vm.box = "freebsd/FreeBSD-12.0-CURRENT"
  #config.vm.box = "freebsd11" # based on above image
  config.ssh.shell = "sh"
  config.vm.base_mac = "080027D14C68"

  #config.vm.network :"private_network", ip: "192.168.11.2", auto_config: false, virtualbox__intnet: "intnet1"
  #config.vm.network :"private_network", ip: "192.168.12.2", auto_config: false, virtualbox__intnet: "intnet2"
  #config.vm.network :"private_network", ip: "192.168.11.2", virtualbox__intnet: "intnet1"
  #config.vm.network :"private_network", ip: "192.168.12.2", virtualbox__intnet: "intnet2"

  config.vm.provider :virtualbox do |vb|
    vb.gui = true
    vb.customize ["modifyvm", :id, "--memory", "512"]
    vb.customize ["modifyvm", :id, "--cpus", "1"]
    vb.customize ["modifyvm", :id, "--hwvirtex", "on"]
    vb.customize ["modifyvm", :id, "--audio", "none"]
    vb.customize ["modifyvm", :id, "--nictype1", "virtio"]
    vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all", "--nicpromisc3", "allow-all"]
  end
  config.vm.provision :shell, :inline => "[ ! -f /usr/local/bin/python ] && /usr/sbin/pkg install -y python || true"
  config.vm.provision :shell, :inline => "ln -sf /usr/local/bin/python /usr/bin/python || true"
  config.vm.provision :ansible do |ansible|
    ansible.playbook = "../playbooks/freebsd.yml"
    ansible.host_vars = {
      "default" => {"user" => "vagrant"}
    }
    ansible.verbose = true
    ansible.limit = 'all'
  end
end
